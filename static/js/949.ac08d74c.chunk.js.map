{"version":3,"file":"static/js/949.ac08d74c.chunk.js","mappings":"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","sources":["components/HomePage/HomePage.styled.jsx","components/PaginatedItems/PaginatedItems.jsx","components/HomePage/HomePage.jsx","services/publicationsApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  & > li {\n    width: 250px;\n  }\n`;\nexport const ImageContainer = styled.div`\n  display: flex;\n  height: 140px;\n  background-color: black;\n  align-items: center;\n  padding: 0 10px;\n`;\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 30px 0;\n  & > li {\n    width: 250px;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nfunction PaginatedItems({ totalPages, setCurrentPage, currentPage }) {\n  // We start with an empty list of items.\n\n  const [prevPage, setPrevPage] = useState(currentPage);\n  const numberOfPages = [];\n  for (let i = 1; i <= totalPages; i++) {\n    numberOfPages.push(i);\n  }\n\n  useEffect(() => {\n    if (prevPage === 0) {\n      return;\n    }\n    //console.log(prevPage);\n    prevPage.style.border = '1px solid black';\n  }, [prevPage]);\n\n  let sliceStartArray = [];\n  let sliceEndArray = [];\n  let sumArray = [];\n  if (numberOfPages.length > 5) {\n    sliceStartArray = numberOfPages.slice(0, 5);\n  }\n  if (numberOfPages.length > 10) {\n    numberOfPages.pop();\n    sliceEndArray = numberOfPages.slice(-5);\n  }\n\n  sumArray = sliceStartArray.concat('...', sliceEndArray);\n\n  const handlePageChange = e => {\n    let target = e.target;\n    console.log(target);\n    setCurrentPage(Number(e.target.value) - 1);\n    setPrevPage(target);\n    console.log(prevPage);\n    if (prevPage === 0 || prevPage === target) {\n      return;\n    } else {\n      prevPage.style.border = 'none';\n    }\n  };\n  return (\n    <>\n      <ul style={{ display: 'flex', justifyContent: 'center' }}>\n        {sumArray.map((page, index) => (\n          <li key={index}>\n            <button\n              style={{ border: 'none' }}\n              onClick={handlePageChange}\n              type=\"button\"\n              value={page}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'services/publicationsApi.js';\nimport { List, ImageContainer, StyledLink } from './HomePage.styled';\nimport PaginatedItems from 'components/PaginatedItems';\n\nexport default function HomePage() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  let [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async currentPage => {\n      try {\n        const { results, total_pages } = await getTrending(currentPage);\n        if (total_pages === 0) {\n          alert('Nothing found');\n          return;\n        }\n        setTotalPages(total_pages);\n        const films = results.map(({ id, original_title, backdrop_path }) => {\n          return { id, original_title, backdrop_path };\n        });\n\n        setMovies(films);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies(currentPage);\n  }, [currentPage]);\n\n  return (\n    <>\n      <List>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} key={movie.id}>\n                {(movie.backdrop_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                    alt={`${movie.original_title}`}\n                    width=\"250\"\n                  />\n                )) || (\n                  <ImageContainer>\n                    <img\n                      src={`https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.png`}\n                      alt=\"not-found\"\n                      width=\"250\"\n                      height=\"140\"\n                    />\n                  </ImageContainer>\n                )}\n                {movie.original_title}\n              </StyledLink>\n            </li>\n          );\n        })}\n      </List>\n      <PaginatedItems\n        totalPages={totalPages}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </>\n  );\n}\n","import axios from 'axios';\nconst key = '051044c279aad319532da903b2292510';\n\nexport const getTrending = async page => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=${\n    page + 1\n  }`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  console.log(response);\n  return response.data;\n};\nexport const getSearch = async query => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&page=1&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieDetails = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieCast = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieReviews = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\n"],"names":["List","styled","ImageContainer","StyledLink","Link","totalPages","setCurrentPage","currentPage","useState","prevPage","setPrevPage","numberOfPages","i","push","useEffect","style","border","sliceStartArray","sliceEndArray","sumArray","length","slice","pop","concat","handlePageChange","e","target","console","log","Number","value","display","justifyContent","map","page","index","onClick","type","HomePage","setTotalPages","movies","setMovies","getMovies","getTrending","results","total_pages","alert","films","id","original_title","backdrop_path","movie","to","src","alt","width","height","key","axios","response","data","getSearch","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}