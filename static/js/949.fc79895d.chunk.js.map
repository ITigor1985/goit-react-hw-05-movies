{"version":3,"file":"static/js/949.fc79895d.chunk.js","mappings":"sQAEaA,E,QAAOC,GAAAA,GAAH,iI,SC0BjB,MA1BA,YAGE,IAHuD,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAE9BC,EAAgB,GACbC,EAAI,EAAGA,GAAKH,EAAYG,IAC/BD,EAAcE,KAAKD,GAGrB,IAAME,EAAmB,SAAAC,GACvBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBT,EAAeU,OAAOL,EAAEM,cAAcF,SAExC,OACE,+BACE,wBACGR,EAAcW,KAAI,SAACC,EAAMC,GAAP,OACjB,yBACE,mBAAQC,QAASX,EAAkBY,KAAK,SAASP,MAAOI,EAAxD,SACGA,KAFIC,WCXJ,SAASG,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBnB,EAApB,KACA,GAAoCkB,EAAAA,EAAAA,UAAS,GAA7C,eAAOnB,EAAP,KAAmBqB,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAKG,EAAL,KAAaC,EAAb,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAML,GAAN,uGAEyBM,EAAAA,EAAAA,IAAYN,GAFrC,mBAENO,EAFM,EAENA,QACY,KADHC,EAFH,EAEGA,aAFH,uBAIZC,MAAM,iBAJM,0BAOdR,EAAcO,GACRE,EAAQH,EAAQd,KAAI,YACxB,MAAO,CAAEkB,GAD0D,EAAxCA,GACdC,eADsD,EAApCA,eACFC,cADsC,EAApBA,kBAIjDV,EAAUO,GAZI,kDAcdvB,QAAQC,IAAR,MAdc,0DAAH,sDAiBfiB,EAAUL,KACT,CAACA,KAGF,iCACE,SAACtB,EAAD,UACGwB,EAAOT,KAAI,SAAAqB,GACV,OACE,yBACE,UAAC,KAAD,CACEC,MAAO,CAAEC,QAAS,QAASC,OAAQ,UACnCC,GAAE,kBAAaJ,EAAMH,IAFvB,UAKGG,EAAMD,gBACL,gBACEM,IAAG,yCAAoCL,EAAMD,eAC7CO,IAAG,UAAKN,EAAMF,gBACdS,MAAM,QAGTP,EAAMF,iBATFE,EAAMH,KAJNG,EAAMH,UAmBrB,SAAC,EAAD,CAAgB/B,WAAYA,EAAYC,eAAgBA,S,0MCvDxDyC,EAAM,mCAEChB,EAAW,mCAAG,WAAMZ,GAAN,8EACzB6B,IAAAA,SAAAA,QAAA,kEAAoFD,EAApF,iBACE5B,EAAO,GAFgB,SAIF6B,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAJX,cAInBC,EAJmB,OAKzBrC,QAAQC,IAAIoC,GALa,kBAMlBA,EAASC,MANS,2CAAH,sDAQXC,EAAS,mCAAG,WAAMC,GAAN,8EACvBJ,IAAAA,SAAAA,QAAA,4DAA8ED,EAA9E,kBAA2FK,EAA3F,0BADuB,SAEAJ,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFb,cAEjBC,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAKTG,EAAe,mCAAG,WAAMC,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,oBAAmFP,EAAnF,mBAD6B,SAENC,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfK,EAAY,mCAAG,WAAMD,GAAN,8EAC1BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FP,EAA3F,mBAD0B,SAEHC,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFV,cAEpBC,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FP,EAA3F,mBAD6B,SAENC,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH","sources":["components/HomePage/HomePage.styled.jsx","components/PaginatedItems/PaginatedItems.jsx","components/HomePage/HomePage.jsx","services/publicationsApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display:flex;\n  flex-wrap:wrap;\n  justify-content:space-between;\n  & > li{\n    width: 250px;\n  }\n`;\n\n","//import { useState, useEffect } from 'react';\n\nfunction PaginatedItems({ totalPages, setCurrentPage }) {\n  // We start with an empty list of items.\n  const numberOfPages = [];\n  for (let i = 1; i <= totalPages; i++) {\n    numberOfPages.push(i);\n  }\n\n  const handlePageChange = e => {\n    console.log(e.target.value);\n    setCurrentPage(Number(e.currentTarget.value));\n  };\n  return (\n    <>\n      <ul>\n        {numberOfPages.map((page, index) => (\n          <li key={index}>\n            <button onClick={handlePageChange} type=\"button\" value={page}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from 'services/publicationsApi.js';\nimport { List } from './HomePage.styled';\nimport PaginatedItems from 'components/PaginatedItems';\n\nexport default function HomePage() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  let [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async currentPage => {\n      try {\n        const { results, total_pages } = await getTrending(currentPage);\n        if (total_pages === 0) {\n          alert('Nothing found');\n          return;\n        }\n        setTotalPages(total_pages);\n        const films = results.map(({ id, original_title, backdrop_path }) => {\n          return { id, original_title, backdrop_path };\n        });\n\n        setMovies(films);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies(currentPage);\n  }, [currentPage]);\n\n  return (\n    <>\n      <List>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                style={{ display: 'block', margin: '1rem 0' }}\n                to={`/movies/${movie.id}`}\n                key={movie.id}\n              >\n                {movie.backdrop_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                    alt={`${movie.original_title}`}\n                    width=\"250\"\n                  />\n                )}\n                {movie.original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n      <PaginatedItems totalPages={totalPages} setCurrentPage={setCurrentPage} />\n    </>\n  );\n}\n","import axios from 'axios';\nconst key = '051044c279aad319532da903b2292510';\n\nexport const getTrending = async page => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=${\n    page + 1\n  }`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  console.log(response);\n  return response.data;\n};\nexport const getSearch = async query => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&page=1&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieDetails = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieCast = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieReviews = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\n"],"names":["List","styled","totalPages","setCurrentPage","numberOfPages","i","push","handlePageChange","e","console","log","target","value","Number","currentTarget","map","page","index","onClick","type","HomePage","useState","currentPage","setTotalPages","movies","setMovies","useEffect","getMovies","getTrending","results","total_pages","alert","films","id","original_title","backdrop_path","movie","style","display","margin","to","src","alt","width","key","axios","response","data","getSearch","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}